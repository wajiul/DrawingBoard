@model IEnumerable<BoardModel>

@{
    string userId = (string)ViewData["UserId"];
}
<div style="display:none;">
    <canvas id="canvas"></canvas>
</div>

<partial name="_Navbar"/>

<div class="container mb-5">
    <h1 class="text-center text-primary">My Board</h1>

    <a asp-action="NewBoard" asp-controller="Board" asp-route-userId="@userId" class="btn btn-primary mb-3">Create New</a>

        <div class="row g-4 justify-content-center align-items-center">
            @foreach(var board in Model)
            {
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <a  
                        asp-action="Display" asp-route-boardId="@board.BoardId" asp-route-userId="@board.UserId"
                        class="text-decoration-none">
                        <div class="card shadow board-item overflow-hidden p-0">
                            <img id="@board.BoardId" src="~/images/dummyBoard.jpg" class="card-img-top">
                            <div class="card-body">
                                
                            </div>
                            <div class="card-footer bg-white px-0 mx-0 text-center position-relative">
                                <p class="card-title text-black text-truncate p-0 m-0">@board.Title</p>
                                <span class="text-secondary">@board.Date.ToString("dd MMM, yyyy")</span>
                                <div class="board-overlay">
                                    <a asp-action="Display" asp-route-boardId="@board.BoardId" asp-route-userId="@board.UserId"
                                        class="btn btn-square btn-outline-light mx-1">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-boardId="@board.BoardId" asp-route-userId="@board.UserId"
                                        class="btn btn-square btn-outline-danger mx-1">
                                        <i class="bi bi-trash3"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>

</div>


@section Scripts {
    <script src="~/js/fabric.js"></script>

    <script>

        $(document).ready(function () {

            const canvas = new fabric.Canvas('canvas', {
                width: window.innerWidth,
                height: window.innerHeight,
                backgroundColor: '#fff'
            });

            const myBoard = document.getElementById('myBoard');
           
            const userId = '@userId';
            let userData = null;

            async function getCanvasThumbnail(canvasData) {
                await loadCanvasFromDb(canvasData);

                let dataURL = canvas.toDataURL({
                    format: 'png',
                    quality: 1.0
                });
                return dataURL;
            }

            function applyObjectChange(objectId, objectData) {
                fabric.util.enlivenObjects([JSON.parse(objectData)], function (objects) {
                    if (objects.length > 0) {
                        const object = objects[0];
                        canvas.add(object);
                        canvas.renderAll();
                    }
                });
            }

            async function loadCanvasFromDb(canvasObjects) {
                canvas.clear();
                canvasObjects.forEach(obj => {
                    applyObjectChange(obj.objectId, obj.objectData);
                });

            }

            async function showBoardImages(boards) {
                for (let board of boards) {
                    const imgSrc = await getCanvasThumbnail(board.canvasObjects);
                    const ch = $(`#${board.boardId}`);
                    $(`#${board.boardId}`).attr('src', imgSrc);
                }
            } 

            function getAllBoardCanvas() {
                $.ajax({
                    url: `GetUserAllBoards?userId=${userId}`,
                    method: 'GET',
                    contentType: 'application/json',
                    success: function(response) {
                        showBoardImages(response);
                    }
                });
            }
        
            getAllBoardCanvas();
        });

    </script>

}