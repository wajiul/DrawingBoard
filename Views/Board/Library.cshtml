@model IEnumerable<BoardWithAuthorModel>
@{
    string userId = (string)ViewData["UserId"];
}
<div style="display:none;">

    <canvas id="canvas"></canvas>
</div>

<partial name="_Navbar" />

<div class="container">

    <h1 class="text-center text-primary">Library</h1>

    <table class="display custom-table" id="boardTable">
        <thead>
            <tr>
                <th style="width: 15%;">Thumbnail</th>
                <th style="width: 55%;">Title</th>
                <th style="width: 15%;">Owner</th>
                <th style="width: 15%;">Date</th>
            </tr>
        </thead>
        <tbody id="libraryTableBody">
            @foreach(var board in Model)
            {
                <tr>
                    <td class="thumbnail">
                        <img id="@board.BoardId" src=""/>
                    </td>
                    <td class="board-title">
                        @board.Title
                    </td>
                    <td class="board-owner">
                        <p>@board.Author</p> 
                        <span>@board.Email</span>
                    </td>
                    <td class="board-date">
                        <p>@board.Date.ToString("dd MMM, yyyy")</p>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts {
    <script src="~/js/fabric.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

    <script>

        $(document).ready(function() {

            const canvas = new fabric.Canvas('canvas', {
                width: window.innerWidth,
                height: window.innerHeight,
                backgroundColor: '#fff'
            });

            const myBoard = document.getElementById('myBoard');

            async function getCanvasThumbnail(canvasData) {
                await loadCanvasFromDb(canvasData);

                let dataURL = canvas.toDataURL({
                    format: 'png',
                    quality: 1.0
                });
                return dataURL;
            }

            function applyObjectChange(objectId, objectData) {
                fabric.util.enlivenObjects([JSON.parse(objectData)], function (objects) {
                    if (objects.length > 0) {
                        const object = objects[0];
                        canvas.add(object);
                        canvas.renderAll();
                    }
                });
            }

            async function loadCanvasFromDb(canvasObjects) {
                canvasObjects.forEach(obj => {
                    applyObjectChange(obj.objectId, obj.objectData);
                });

            }

            async function showBoardImages(boards) {
                for (let board of boards) {
                    console.log('b', board);
                    const imgSrc = await getCanvasThumbnail(board.canvasObjects);
                    console.log(board.boardId);
                    const ch = $(`#${board.boardId}`);
                    console.log('ch', ch);
                    $(`#${board.boardId}`).attr('src', imgSrc);
                }
            }

            function getAllBoardCanvas() {
                $.ajax({
                    url: `GetBoardCanvas`,
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (response) {
                        showBoardImages(response);
                    }
                });
            }
  
            function inilializeDataTable() {
                var table = $('#boardTable').DataTable({
                    lengthChange: true,
                    initComplete: function () {
                        var searchInput = $('.dataTables_filter input');
                    }
                });
                $('#boardTable').removeClass('dataTable');
            }
            
            inilializeDataTable();


            getAllBoardCanvas();


        });

    </script>

}